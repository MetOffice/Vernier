name: Deploy all tests

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/documentation.yml'
      - '.github/workflows/coverage.yml'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/documentation.yml'
      - '.github/workflows/coverage.yml'

jobs:

  build-install:
    # The reusable build workflow is called using strategy matrices as input.
    name: "Build/install: ${{ matrix.compiler.cpp }}"
    strategy:
      matrix: 
        compiler: [
          {c: gcc-10,   cpp: g++-10,     fortran: gfortran-10},
          {c: clang-12, cpp: clang++-12, fortran: gfortran-10}
        ]
        shared_libs: [ true, false ]
    uses: ./.github/workflows/build.yml
    with:
      c_compiler:       ${{ matrix.compiler.c }}
      cpp_compiler:     ${{ matrix.compiler.cpp }}
      fortran_compiler: ${{ matrix.compiler.fortran }}
      shared_libs:      ${{ matrix.shared_libs }}

  unit_test:
    # Unit tests ran for the same compiler configurations as before, but no
    # need to test both the dynamic and static libraries.
    name: "Unit test: ${{ matrix.compiler.cpp }}"
    needs: [ build-install ]
    strategy:
      matrix:
        compiler: [
          {c: gcc-10,   cpp: g++-10,     fortran: gfortran-10},
          {c: clang-12, cpp: clang++-12, fortran: gfortran-10}
        ]
    uses: ./.github/workflows/unit.yml
    with:
      cpp_compiler: ${{ matrix.compiler.cpp }}

  system_test:
    # System test is compiled and ran for all compiler configurations, using
    # both the static and dynamic artifacts.
    name: "System test: ${{ matrix.compiler.cpp }}"
    needs: [ build-install ]
    strategy:
      matrix: 
        compiler: [
          {c: gcc-10,   cpp: g++-10,     fortran: gfortran-10},
          {c: clang-12, cpp: clang++-12, fortran: gfortran-10}
        ]
        shared_libs: [ true, false ]
    uses: ./.github/workflows/system.yml
    with:
      cpp_compiler: ${{ matrix.compiler.cpp }}
      fortran_compiler: ${{ matrix.compiler.fortran }}
      shared_libs: ${{ matrix.shared_libs}}